library ieee;
use ieee.std_logic_1164.all;

entity execute is  port( 
register_rs, register_rt: in std_logic_vector(31 downto 0);    
PC4, immediate: in std_logic_vector(31 downto 0);    
ALUOp: in std_logic_vector(1 downto 0);    
ALUSrc: in std_logic;    
beq_control,clock: in std_logic;    
alu_result, branch_addr: out std_logic_vector(31 downto 0);    
branch_decision: out std_logic); 
end execute;

architecture bvr of execute is 
 
begin 
process 
variable alu_output: std_logic_vector(31 downto 0);  
variable zero: std_logic;  
variable branch_offset, temp_branch_addr: std_logic_vector(31 downto 0); 
begin   
	if(clock'event and clock='1') then    
	case ALUOp is     
	when "00" =>      
		alu_output:=register_rs+immediate;
	when "01" =>
		alu_output:=register_rs-register_rt;
	when "10" => 
		case immediate(5 downto 0) is
			when "100000"=>
				alu_output:=register_rs+register_rt;
			when "100010"=>
				alu_output:=register_rs-register_rt;
			when "100100"=>
				alu_output:= register_rs and register_rt;
			when others=>
				alu_output:= resgister_rs - register_rt;
			end case;
	end case;    
	branch_offset:=immediate;    
	temp_branch_addr:=PC4+branch_offset;    
	branch_decision <= (beq_control and zero);    
	branch_addr <= temp_branch_addr;    
	alu_result <= alu_output;   
	end if; 
	end process; 
	
end bvr;